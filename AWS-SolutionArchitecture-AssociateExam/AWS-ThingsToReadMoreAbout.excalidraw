{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 1919,
      "versionNonce": 1607401798,
      "isDeleted": false,
      "id": "5sE8kiHXkPCucb1cA4sZC",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -109.19047619047612,
      "y": -2496.194444444445,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1034,
      "height": 475,
      "seed": 484516344,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Lambda\n    Throttle-Reserve concurrency limit\n    IAM role: so lambda can assume and execute code of function\n    Function policy: required to specify which AWS resources are allowed to invoke your function\n    Log streams: helps to identify & troubleshoot issues with your lambda function\n    Downstream resources: resources required during execution of lambda function\n    Role execution policy: what resources the function role has access to when the function is being run\n    Function policy: defines which AWS resources are allowed to invoke your function\n\n    a. Poll based event sources: Dynamodb, SQS, Kinesis\n        mapping held within lambda function\n        event source mapping: configuration that links event source to lambda function\n        invocation type is always syncronous\n        permission is required in execution role policy\n    b. Push based event sources\n        mapping is maintained within event source\n        mapping\n        invocation type varies on the service\n        lambda function policy",
      "baseline": 468,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 455,
      "versionNonce": 160505370,
      "isDeleted": false,
      "id": "X8Mw4DgeOZPOGA0a5CjuL",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -121.33333333333275,
      "y": -527.6666666666663,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 328,
      "height": 200,
      "seed": 1255530232,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Spot Instance\nReserved Instance\n    Standard reserved instance\n    Convertible reserved instance\nOn Demand Instance\nDedicated instance\nDedicated host instance\n",
      "baseline": 193,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 403,
      "versionNonce": 1781196934,
      "isDeleted": false,
      "id": "L854oe3SEv031n-LdkF6-",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -119.11111111111057,
      "y": -312.2222222222219,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 253,
      "height": 175,
      "seed": 1595309560,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "AutoScaling\n    Auto scaling group\n        Minimum capacity\n        Maximum capacity\n        Desired capacity\n    Auto scaling policy\n    Auto scaling plan",
      "baseline": 168,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 278,
      "versionNonce": 1354386138,
      "isDeleted": false,
      "id": "9FVcjFaW25t1J8cWolDRv",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -128.22222222222163,
      "y": -112.44444444444417,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 562,
      "height": 175,
      "seed": 2009835256,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Amazon Neptune\n    Used in Fraud Detection, Recommendation engine\n    Database cluster volume\n    Instances\n    Storage\n    Neptune Storage Auto Repair\n    Cluster endpoint, Reader endpoint, Instance Endpoint",
      "baseline": 168,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 255,
      "versionNonce": 1728571334,
      "isDeleted": false,
      "id": "iJS69VFWIwkTFNBdgmEko",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -134.66666666666617,
      "y": 91.44444444444474,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 420,
      "height": 300,
      "seed": 1049646728,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Redshift\n    Cluster\n    Redshift engine\n    Leader node\n    Compute Node\n        Node slice\n            types: \n            a. RA3-high performance nodes\n            b. Dense-legacy node types\n    Massively Parallel processing(MPP)\n    Columnar Data storage\n    Result caching",
      "baseline": 293,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 1182,
      "versionNonce": 377683718,
      "isDeleted": false,
      "id": "infCw6_w40OIuiq4UznJ9",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -131.1904761904754,
      "y": 597.7222222222226,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1292,
      "height": 1475,
      "seed": 235290760,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Networking: \nVPC: Virtual Private Cloud (VPC) lets you provision a logically isolated section of the AWS Cloud \nwhere you can launch AWS resources in a virtual network that you define.\nCIDR block: Classless Inter-domain routing: Range of IP address, /16 to /28\nSubnets: range of IP addresses in your VPC\n    private: configure resources for a back-end tier, such as database servers that should not be accessible from the internet. \n    However, you may eventually want these back-end database servers to access the internet for OS updates \n    or to be accessible by administrators via a bastion host.\n    public: If subnet is associated with a route table that has a route to an internet gateway\nInternet gateway: attached to VPC\nRoute table: route table in public subnet has route(0.0.0.0/0 IGW) in route table pointing to internet gateway, \n    and is therefore able to access internet\nDHCP options set: enables DNS for instances that need to communicate over the VPC's Internet gateway\nRoute Table: contains a set of rules, called routes, that are used to determine where network traffic is directed\nNetwork ACL: list of rules to determine whether traffic is allowed in or out of any subnet associated with the network ACL\nAvailability Zones: distinct locations that are engineered to be isolated from failures in other Availability Zones.\ninternet gateway: VPC component that allows communication between instances in your VPC and the Internet. \n    serves two purposes: \n    a. to provide a target in your VPC route tables for internet-routable traffic and \n    b. to perform network address translation (NAT) for instances that have been assigned public IP addresses\nElastic IP address (EIP): static and public IP address that you can associate with an EC2 instance. \nEIPs have the benefit of not changing when you stop and start an EC2 instance, \nwhereas the default public IP that comes with an EC2 instance may change. \nNetwork access control list (NACL): acts as a firewall for controlling traffic in and out of a subnet. \nNetwork address translation(NAT) device enables instances in the private subnet to initiate outbound traffic to the Internet.\n    The instances in the private subnet can access the Internet via the NAT Gateway in the public subnet. \nbastion host: a host that sits inside your public subnet for the purposes of SSH (and/or RDP) access.\n\n\nVPC Security and Control\nNetwork Access Control Lists (NACLs)\nSecurity Groups\nNAT Gateway\nBastion Hosts\nVPC Connectivity\nVPN & Direct Connect\nVPC Peering\nTransit Gateway\nBasic Networking Concepts\nElastic IP Addresses (EIPs)\nElastic Network Interfaces (ENIs)\nEC2 Enhanced Networking with the Elastic Network Adaptor (ENA)\nVPC Endpoints\nAWS Global Accelerator\nDNS & Content Delivery on AWS\nAmazon Route 53\nAmazon CloudFront\n\nVPC\n    lives in a region\n    has multiple subnets\n    has Internet gateway which allows access to internet\n    can span multiple Az's\n\nSubnet \n    has a route table which controls traffic out of subnet    \n    has NAT gateway which allows private subnet to access Internet\n    access is controlled through Network access control list(NACL). NACL is stateless. \n",
      "baseline": 1468,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 433,
      "versionNonce": 1182063706,
      "isDeleted": false,
      "id": "4bRu9RbAdEQq1XX-4fD-P",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 57.150793650794526,
      "y": -1975.150750054255,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 612,
      "height": 75,
      "seed": 1113795943,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Enable Lambda to access resources in VPc by \nprovide additional VPC specific config info eg: VPC subnet Id's\nSecurity group Id's",
      "baseline": 68,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 489,
      "versionNonce": 756624966,
      "isDeleted": false,
      "id": "NyFmdpLxEssY1L5U4DzJ2",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 33.32865061535938,
      "y": -1950.3600706921047,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 659.3056333865443,
      "height": 6.342226714747312,
      "seed": 2132006119,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          659.3056333865443,
          -6.342226714747312
        ]
      ]
    },
    {
      "type": "arrow",
      "version": 675,
      "versionNonce": 789332250,
      "isDeleted": false,
      "id": "GbNuOGE5myWP1sXuYoPb8",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 704.8387490456114,
      "y": -1974.2338668176633,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 477.5894233339036,
      "height": 0.7436069793106981,
      "seed": 644435433,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          477.5894233339036,
          0.7436069793106981
        ]
      ]
    },
    {
      "type": "text",
      "version": 600,
      "versionNonce": 1202156934,
      "isDeleted": false,
      "id": "enuxY5dfzb5nVyUMyptu-",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 731.4365079365091,
      "y": -2000.8650357685406,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 341,
      "height": 75,
      "seed": 1147319721,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [
        "GbNuOGE5myWP1sXuYoPb8"
      ],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Lambda uses this to set up \nENI to enable function to connect\nto other resources in private VPC",
      "baseline": 68,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 334,
      "versionNonce": 14224858,
      "isDeleted": false,
      "id": "k1QarxLKeIBrwMy23jrK2",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 48.57936507936574,
      "y": -1865.150750054255,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 952,
      "height": 75,
      "seed": 523831239,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [
        "inLAsYhQDFwmR7qQavwU8"
      ],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "make sure VPC has sufficient ENI capacity to support scale requirements of Lambda function. \nspecify at least one subnet in each AZ in your Lambda function configuration\n(Lambda function can run in another AZ if one goes down or runs out of IP addresses.)",
      "baseline": 68,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 1059,
      "versionNonce": 1600836806,
      "isDeleted": false,
      "id": "inLAsYhQDFwmR7qQavwU8",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 45.49893912669961,
      "y": -1837.9511249724817,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1129.4848789899447,
      "height": 5.4307059802475806,
      "seed": 1814603433,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": {
        "elementId": "k1QarxLKeIBrwMy23jrK2",
        "focus": -0.31676994275372766,
        "gap": 3.0804259526661326
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          1129.4848789899447,
          -5.4307059802475806
        ]
      ]
    },
    {
      "type": "text",
      "version": 1024,
      "versionNonce": 1089356442,
      "isDeleted": false,
      "id": "vavKYyJFK12v5moP_aqg1",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -24.511219891512155,
      "y": -1757.9364207434285,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 977,
      "height": 200,
      "seed": 1869536103,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [
        "_eXgF1byrgGcNe27QOSNy",
        "duGbYWKrO7DwN_AtmpD00"
      ],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "CloudFront:\n\nServe content that is stored in S3 but not publicly accessible from S3 directly\na. When creating or updating distribution in Cloudfront, you can add OAI=> \nthis update S3 bucket policy to give OAI(Origin Access Identity) permission to access your bucket\nb. you can manually change bucket policy\nc. Change Network Access control list which control permissions on individual objects in bucket. \n",
      "baseline": 193,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 790,
      "versionNonce": 1040206854,
      "isDeleted": false,
      "id": "duGbYWKrO7DwN_AtmpD00",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -24.277777777777374,
      "y": -1679.0078493148571,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1.895455656041122,
      "height": 0.011069062596789081,
      "seed": 610986727,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": {
        "elementId": "vavKYyJFK12v5moP_aqg1",
        "focus": -0.2325927657144703,
        "gap": 1.6620135423063402
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -1.895455656041122,
          0.011069062596789081
        ]
      ]
    },
    {
      "type": "arrow",
      "version": 438,
      "versionNonce": 1509875546,
      "isDeleted": false,
      "id": "6aWRyW0d8Vjb38atVf7dC",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -74.27777777777737,
      "y": -1679.0078493148571,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1107.1428571428573,
      "height": 11.428571428571331,
      "seed": 608985319,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          1107.1428571428573,
          -11.428571428571331
        ]
      ]
    },
    {
      "type": "text",
      "version": 625,
      "versionNonce": 1902435142,
      "isDeleted": false,
      "id": "TQLC9LQkJ2Lc8yYwYVGEx",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -115.61904761904736,
      "y": -835.174603174603,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 883,
      "height": 275,
      "seed": 485525191,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "AutoScaling group of EC2 instances behind load balancer=> \nallow application to allow multiple domains to serve SSL traffic over same IP address=>\nGenerate SSL certificate with AWS certificate manager=> \nCreate cloudfront web distribution=> \nAssociate certificate with cloudfront web distribution=>\nEnable support for Server name indication(SNI)=> \n    SNI offers same security as the Dedicated IP Custom SSL feature. \n    Does not work on some older browsers\n    SNI Custom SSL relies on SNI extension of the Transport Layer Security protocol, \n    which allows multiple domains to serve SSL traffic over same IP address \n    by including the hostname which the viewers are trying to connect to.",
      "baseline": 268,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 333,
      "versionNonce": 1750983706,
      "isDeleted": false,
      "id": "h7qRCjKJ_LAu2tRGzOQCx",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -105.61904761904742,
      "y": -1218.5079365079364,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1016,
      "height": 350,
      "seed": 285791625,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "SQS:\nShort Polling:\n    Used for scenarios where high throughput is required\n    short polling queries only a subset of the servers (based on a weighted random distribution) \n    to determine whether any messages are available for inclusion in the response. \n    If ReceiveMessageWaitTimeSeconds is zero it means Short polling is being used.\nLong Polling\n    Used for scenarios where cost needs to be reduced\n     Long polling eliminates false empty responses by querying all of the\n    servers. \n    Long polling returns messages as soon any message becomes available.\n    If ReceiveMessageWaitTimeSeconds is greater than zero, then it is Long polling\n    Long polling reduces number of empty responses by allowing Amazon SQS to wait until a message is\n    available in the queue before sending a response.",
      "baseline": 343,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 663,
      "versionNonce": 1489334874,
      "isDeleted": false,
      "id": "pkszo-8LY6dvMc2jkS7jU",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -622.9124483380081,
      "y": 4798.534244586178,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 2189,
      "height": 325,
      "seed": 619509025,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "S3:\nIn S3 you can set permissions on your S3 resources using Bucket Policies and User Policies.  \nBucket policies are applied directly to a bucket within S3 itself, whereas user policies are set within IAM.\nARNs (Amazon Resource Names) adhere to the following pattern:\narn:Paritition:Service:Region:Account-ID:Resource\nPartition – This relates to the partition that the resource is found in. For standard AWS regions, this section would be ‘aws.’\nService – This reflects the specific AWS service, for example ‘s3.’\nRegion – This is the region where the resource is located. Some services do not need a region specified, so this can sometimes be left blank.\nAccount-ID – This is your AWS Account ID (without hyphens). Again, some services do not need this information, and so it can be left blank.\nResource – The value of this field depends on the AWS service you are using.\nFor example, if using the Action: “Action”:”s3:*”, then use the bucket name that you want the permission to apply to arn:aws:s3:::calabs-bucket/*.\nS3 Object Lock feature: you won’t be able to upload new versions of an object. This feature is only helpful when you want to prevent objects from being deleted or overwritten for a fixed amount of time or indefinitely.\n",
      "baseline": 318,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 1435,
      "versionNonce": 100552922,
      "isDeleted": false,
      "id": "pxpqi-ICJNz0VUQROk1e8",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -145.4444444444439,
      "y": 2107.282828282828,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 2225,
      "height": 1725,
      "seed": 2021295933,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "VPC\n    Tag\n    CIDR Block: CIDR block from private IP address ranges\n    Tenancy: Default, Dedicated\n    Internet gateway: \n        VPC component that allows communication between instances in your VPC and the Internet, \n        can only be attached to one VPC. \n    DHCP options set:  Enables DNS for instances that need to communicate over the VPC's Internet gateway\n    Main route table:  \n        A route table contains a set of rules, (routes) that are used to determine where network traffic is directed. \n        Each route in a table specifies a destination CIDR and a target (for example, traffic destined for 172.16.0.0/12 is targeted for the virtual private gateway).  \n    subnet:\n        When you create a subnet, you specify the CIDR block for the subnet, which is a subset of the VPC CIDR block. \n        Each subnet must reside entirely within one AZ\n        Public subnet: In the route table, if a subnet has a route with the destination (0.0.0.0/0) and Internet Gateway as the target.\n        Private subnet: If a subnet does not have a route to the Internet (0.0.0.0/0) through a gateway\n            use case: \n            configure resources for a back-end tier, (db servers) that should not be accessible from the internet. \n            However, these back-end d\\b severs will need to access the internet for O\\S updates or to be accessible by administrators via a bastion host.\n\n    Bastion host: a host that sits inside your public subnet for the purposes of SSH (and/or RDP) access.\n        set up SSH port forwarding by enabling ssh-agent forwarding so you can SSH (jump) to the private instance in your private subnet. \n        for windows connnectivity, setting up remote desktop gateway is recommended\n        restrict inbound access to specific IP addresses of your network administrators. \n        outbound traffic: restrictng the destination to the security group of instances in your private subnet only. \n        When configuring bastion hosts, they are often stripped down to provide the minimum amount of services. \n    Network access control list(NACL):  \n        List of rules to determine whether traffic is allowed in or out of any subnet associated with the network ACL\n        Inbound rule: source=> 0.0.0.0/0, Port Range: 1024-65535: \n            This will allow return traffic for the outbound rules (the range is specified as 1024-65535 because these are the available ports and not reserved). \n            This enables resources inside the subnet to receive responses to their outbound traffic.\n        Outbound rule:\n            a. the outbound IP addresses can be anything, the ports need to be 80 or 443. \n            O\\S updates needed by instances in your private subnet could come from anywhere (0.0.0.0/0), \n            but they will be downloaded over port 80 (HTTP) or 443 (HTTPS). You will need to add rules to account for each port.\n            b. Port Range: Enter 32768-61000, Destination: Enter The CIDR block of your public subnet\n\n        create rules with rule numbers that are multiples of 100. This can help with organization if you need to insert new rules, as there is room within the numbering scheme.\n        NACLs are stateless i.e they cannot tell if a message is in response to a request that started inside the VPC, or if it is a request that started from the internet. \n        Hence, a NACL is better suited for private subnets. \n        For public subnets, using security groups is recommended without NACLs.\n        each subnet must be associated with a network ACL. \n        If you do not explicitly associate a subnet with a network ACL, the subnet is automatically associated with the default network ACL that allows all inbound and outbound traffic.\n        By default, a network ACL is not associated with a subnet until you explicitly associate it with one. \n        Changes to NACLs may take longer to propagate, as opposed to security groups, which take effect almost immediately. \n\n    network address translation(NAT) device: \n        EC2 instances that you launch into a private subnet in a virtual private cloud (VPC) can't communicate with the Internet. \n        You can use a network address translation (NAT) instance in a public subnet in your VPC, to enable instances in the private subnet to initiate outbound traffic to the Internet, \n        but prevent the instances from receiving inbound traffic initiated by someone on the internet. you should configure the route table in the private subnet to associate the instances use the NAT gateway in same AV.\n        When sending response traffic to the instances, the NAT device translates the addresses back to the original source IPv4 addresses.    \n        Common scenario: \n        You want maximum security on the production database servers, so you put them in a private subnet (no route to the internet). \n        Yet you need the ability to perform operating system updates on the D\\B servers.  \n        They cannot connect to the internet, so they cannot receive needed updates.  \n        By adding a default route to a NAT, the database servers can connect to the internet and receive updates. \n        However, they are still secure because no connection originating from the internet can reach them.\n\nEC2\n    public subnet\n        NACL\n            inbound: allow port 443 on destination 0.0.0.0/0\n            outbound: \n                allow port 443 on destination 0.0.0.0/0, \n                allow ports 32768-65535(ephemeral ports) on destination 0.0.0.0/0, \n                deny all traffic on destination 0.0.0.0/0\n    Security group has attached Elastic IP address\n        allow inbound traffic on port 443 from source 0.0.0.0/0\n        default SG includes a outbound rule that allows all outbound traffic. ",
      "baseline": 1718,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 1070,
      "versionNonce": 1285850566,
      "isDeleted": false,
      "id": "eJ5yUJygbKRV_PFtzceKq",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -611.7777777777771,
      "y": 7712.111111111112,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 2094,
      "height": 1250,
      "seed": 461413901,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Definitions:\nVPC endpoint:\n    enables you to privately connect your VPC to supported AWS services and VPC endpoint services powered by PrivateLink without requiring an Internet gateway, NAT device, VPN connection, or\n    AWS Direct Connect connection. \n    Instances in your VPC do not require public IP addresses to communicate with resources in the service. Traffic between your VPC and the other services does not leave the Amazon network.\nEndpoints are virtual devices, that allow communication between instances in your VPC and services without imposing constraints on your network traffic.\nVPC peering connection: \n    networking connection between two VPCs that enables you to route traffic between them privately. Instances in either VPC can communicate with each other as if they are within the same network. \n    You can create a VPC peering connection between your own VPCs, with a VPC in another AWS account, or with a VPC in a different AWS Region.\n    AWS uses the existing infrastructure of a VPC to create a VPC peering connection; it is neither a gateway nor a VPN connection and does not rely on a separate piece of physical hardware. \n    There is no single point of failure for communication or a bandwidth bottleneck\nTransit Gateway: used for interconnecting VPCs and onpremises networks through a central hub\nNAT Gateway: allows instances in the private subnet to gain access to the Internet\nRAID (Redundant Array of Independent Disks): data storage virtualization technology that combines multiple storage devices to achieve higher performance or data durability. \nRAID 0: can stripe multiple volumes together for greater I/O performance than you can achieve with a single volume. \nRAID 1 can mirror two volumes together to achieve on-instance redundancy.\nAmazon EBS: \n    block-level storage device that you can attach to a single EC2 instance. \n    Is not a concurrently accessible storage\nAmazon EFS:\n    file storage service for use with Amazon EC2. \n    provides a file system interface, file system access semantics (such as strong consistency and file locking), and concurrently-accessible storage for up to thousands of Amazon EC2 instances. \nAmazon S3: an object storage service.\nAmazon Data Lifecycle Manager (Amazon DLM) to automate the creation, retention, and deletion of snapshots taken to back up your Amazon EBS volumes. \nAmazon Storage Gateway is used only for creating a backup of data from your on-premises server\nNAT Gateway is a highly available, managed Network Address Translation (NAT) service for your resources in a private subnet to access the Internet. \nAWS Security Token Service (AWS STS) is the service that you can use to create and provide trusted users with temporary security credentials that can control access to your AWS resources. \nAWS Single Sign-On (SSO) is a cloud SSO service that makes it easy to centrally manage SSO access to multiple AWS accounts and business applications.\nAmazon Cognito service is primarily used for user authentication and not for providing access to your AWS resources. \nA JSON Web Token (JWT) is meant to be used for user authentication and session management.\nAmazon WorkDocs is a fully managed, secure content creation, storage, and collaboration service.\nbastion host is a special purpose computer on a network specifically designed and configured to withstand attacks. If you have a bastion host in AWS, it is basically just an EC2 instance. It should be in a\npublic subnet with either a public or Elastic IP address with sufficient RDP or SSH access defined in the security group. Users log on to the bastion host via SSH or RDP and then use that session to manage\nother hosts in the private subnets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "baseline": 1243,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 507,
      "versionNonce": 1620049946,
      "isDeleted": false,
      "id": "AllThI9msNQDoHzg3KBKc",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -591.7777777777771,
      "y": 5435.444444444444,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 2155,
      "height": 950,
      "seed": 1852159843,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "EBS: \nEBS Types: \nAmazon EBS Provisioned IOPS SSD (io1): \n    used for critical business applications that require sustained IOPS performance(particularly database workloads) \n    allows you to specify a consistent IOPS rate when you create the volume,\n    deliver consistent performance whether an I/O operation is random or sequential.    \nGeneral Purpose SSD(gp2): \n    offer cost-effective storage that is ideal for a broad range of workloads. \n    deliver consistent performance whether an I/O operation is random or sequential.\nAmazon EBS Throughput Optimized HDD (st1): \n    used for frequently accessed, throughput-intensive workloads. \n    it cannot be used as a system boot volume.\n    deliver optimal performance only when I/O operations are large and sequential.\nAmazon EBS Cold HDD (sc1): \n    provides lower cost HDD volume compared to General Purpose SSD, it cannot be used as a system boot volume.\n    it cannot be used as a system boot volume.\n    deliver optimal performance only when I/O operations are large and sequential.\n\nAmazon EBS volume : \n    durable, block-level storage device that you can attach to a single EC2 instance. \n    use EBS volumes as primary storage for data that requires frequent updates, such as the system drive for an instance or storage for a database application. \n    use them for throughput-intensive applications that perform continuous disk scans. EBS volumes persist independently from the running life of an EC2 instance.\n    When you create an EBS volume in an Availability Zone, it is automatically replicated within that zone to prevent data loss due to a failure of any single hardware component.\n    After you create a volume, you can attach it to any EC2 instance in the same Availability Zone\n    Amazon EBS Multi-Attach enables you to attach a single Provisioned IOPS SSD (io1) volume to multiple Nitro-based instances that are in the same Availability Zone. However, other EBS types are not supported.\n    An EBS volume is off-instance storage that can persist independently from the life of an instance. You can specify not to terminate the EBS volume when you terminate the EC2 instance during instance\n    creation.\n    EBS volumes support live configuration changes while in production which means that you can modify volume type, volume size, and IOPS capacity without service interruptions.\n    EBS encryption uses 256-bit Advanced Encryption Standard algorithms (AES-256)\n    EBS Volumes offer 99.999% SLA.\n    provides the ability to create snapshots (backups) of any EBS volume and write a copy of the data in the volume to Amazon S3\n\nStorage needs and AWS service:\n    Temporary storage: Amazon local instance store\n    Multi Instance storage: Amazon EFS\n    Highly durable storage: Amazon S3, Amazon EFS\n    Static data or web content: Amazon S3, Amazon EFS\n",
      "baseline": 943,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 553,
      "versionNonce": 1097719962,
      "isDeleted": false,
      "id": "YqY5tIcK-BaMfxWqPpJ9H",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -580.111111111111,
      "y": 6402.11111111111,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 2161,
      "height": 900,
      "seed": 201843779,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "IAM\nweb identity federation: \n    you don’t need to create custom sign-in code or manage your own user identities. \n    users of your app can sign in using a well-known identity provider (IdP) —such as Login with Amazon, Facebook, Google, or any other OpenID Connect (OIDC)-compatible IdP, receive an\n    authentication token, and then exchange that token for temporary security credentials in AWS that map to an IAM role with permissions to use the resources in your AWS account. \nsolution that incorporates single signon feature from corporate AD or LDAP directory and restricts access for each individual user to a designated user folder in an S3 bucket(for example)\n    Setup a Federation proxy or an Identity provider\n    Setup an AWS Security Token Service to generate temporary tokens\n    Configure an IAM role and an IAM Policy to access the bucket.\nintegrate the LDAP directory service from the on-premises data center to the AWS VPC using IAM. The identity store which is currently being used is not compatible with SAML.\n    Develop an on-premises custom identity broker application and use STS to issue short-lived AWS credentials.\n    => application verifies that employees are signed into the existing corporate network’s identity and authentication system, which might use LDAP, Active Directory, or another system. The identity broker\n    application then obtains temporary security credentials for the employees. \n    To get temporary security credentials, the identity broker application calls either AssumeRole or GetFederationToken to obtain temporary security credentials, depending on how you want to manage\n    the policies for users and when the temporary credentials should expire. The call returns temporary security credentials consisting of an AWS access key ID, a secret access key, and a session token. The\n    identity broker application makes these temporary security credentials available to the internal company application. The app can then use the temporary credentials to make calls to AWS directly. The app caches\n    the credentials until they expire, and then requests a new set of temporary credentials.\nSet up SAML 2.0-Based Federation by using a Microsoft Active Directory Federation Service (AD FS):\n    you must configure your organization’s IdP and your AWS account to trust each other. \n    then users can log into the AWS Management Console or call the AWS APIs without you having to create an IAM user for everyone in your organization, by using SAML\nIf a EC2 instance needs to access S3 then:\n    a. create a IAM role and assign it to EC2 instance, \n    b. Give the IAM role permissions on what it can do after it assumes the role\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "baseline": 893,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 233,
      "versionNonce": 157032006,
      "isDeleted": false,
      "id": "eJDSJJo7y35ejNVv0PPOE",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -621.8097993201784,
      "y": 5242.004474792724,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 567.2445119014152,
      "height": 4.867868963145156,
      "seed": 2073469978,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": {
        "elementId": "nwbxM0XqR0_Eo6fSk57rc",
        "focus": 1.73181883843337,
        "gap": 15.532201707874265
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          567.2445119014152,
          -4.867868963145156
        ]
      ]
    },
    {
      "type": "text",
      "version": 99,
      "versionNonce": 1622167834,
      "isDeleted": false,
      "id": "nwbxM0XqR0_Eo6fSk57rc",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -626.3571428571429,
      "y": 5201.47227308485,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 548,
      "height": 25,
      "seed": 1470485658,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [
        "eJDSJJo7y35ejNVv0PPOE"
      ],
      "fontSize": 20,
      "fontFamily": 1,
      "text": " Create the queue, topic, or Lambda function (target).",
      "baseline": 18,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 98,
      "versionNonce": 1854396550,
      "isDeleted": false,
      "id": "U4n9rlJuYJE-s8gTaLD7z",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -606.3571428571429,
      "y": 5161.472273084851,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 249,
      "height": 25,
      "seed": 1006513478,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Configure S3 notification:",
      "baseline": 18,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 65,
      "versionNonce": 58400218,
      "isDeleted": false,
      "id": "lvpw1HsIXMdUoW39Zb9o-",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -614.6904761904761,
      "y": 5263.138939751517,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 886,
      "height": 50,
      "seed": 240914950,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [
        "8mYT9Hf1gQzOGovEc65F1"
      ],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "For SNS or SQS, apply appropriate policy to the topic or the queue. \nFor Lambda, create and supply an IAM role, then associate it with the Lambda function.",
      "baseline": 43,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 298,
      "versionNonce": 2114741638,
      "isDeleted": false,
      "id": "8mYT9Hf1gQzOGovEc65F1",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -618.3127321411838,
      "y": 5319.572874233088,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 919.0271999303673,
      "height": 1.654023415996562,
      "seed": 1628289862,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": {
        "elementId": "lvpw1HsIXMdUoW39Zb9o-",
        "focus": 1.187338767303149,
        "gap": 6.433934481571669
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          919.0271999303673,
          -1.654023415996562
        ]
      ]
    },
    {
      "type": "text",
      "version": 48,
      "versionNonce": 2086924038,
      "isDeleted": false,
      "id": "w06KlmHrv9cQXijU16whP",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -616.3571428571428,
      "y": 5346.472273084851,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 683,
      "height": 25,
      "seed": 141967130,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": " Set the bucket’s Notification Configuration to point to the target.",
      "baseline": 18,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 298,
      "versionNonce": 1599794266,
      "isDeleted": false,
      "id": "ItjBCIrlHMpunLd27z3Qy",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -617.5374094889931,
      "y": 5387.965951459515,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 919.0271999303673,
      "height": 1.654023415996562,
      "seed": 1114418694,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          919.0271999303673,
          -1.654023415996562
        ]
      ]
    },
    {
      "type": "text",
      "version": 44,
      "versionNonce": 51233874,
      "isDeleted": false,
      "id": "lZR5MCuo4MjXxtBknejqV",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -606.3571428571429,
      "y": 7333.138838026256,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 2287,
      "height": 150,
      "seed": 939141638,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Route 53:\nLatency Routing lets Amazon Route 53 serve user requests from the AWS Region that provides the lowest latency. It does not, however, guarantee that users in the same geographic region will be served from the same location.\nGeoproximity Routing lets Amazon Route 53 route traffic to your resources based on the geographic location of your users and your resources. You can also optionally choose to route more traffic or \nless to a given resource by specifying a value, known as a bias. A bias expands or shrinks the size of the geographic region from which traffic is routed to a resource.\nGeolocation Routing lets you choose the resources that serve your traffic based on the geographic location of your users, meaning the location that DNS queries originate from.\nWeighted Routing lets you associate multiple resources with a single domain name (tutorialsdojo.com) or subdomain name (subdomain.tutorialsdojo.com) and choose how much traffic is routed to each resource.",
      "baseline": 143,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 9,
      "versionNonce": 286365070,
      "isDeleted": false,
      "id": "JTPD6qn30ahrzWwJ0R9C0",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -603.0238095238095,
      "y": 7516.472273084848,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 638,
      "height": 125,
      "seed": 112949262,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "AWS WAF:\nbehaviors:\nAllow all requests except the ones that you specify\nBlock all requests except the ones that you specify\nCount the requests that match the properties that you specify",
      "baseline": 118,
      "textAlign": "left",
      "verticalAlign": "top"
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  }
}