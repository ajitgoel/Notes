{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "5sE8kiHXkPCucb1cA4sZC",
      "type": "text",
      "x": 706.9999999999999,
      "y": -1006.1944444444447,
      "width": 1034,
      "height": 475,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 484516344,
      "version": 1430,
      "versionNonce": 604030456,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Lambda\n    Throttle-Reserve concurrency limit\n    IAM role: so lambda can assume and execute code of function\n    Function policy: required to specify which AWS resources are allowed to invoke your function\n    Log streams: helps to identify & troubleshoot issues with your lambda function\n    Downstream resources: resources required during execution of lambda function\n    Role execution policy: what resources the function role has access to when the function is being run\n    Function policy: defines which AWS resources are allowed to invoke your function\n\n    a. Poll based event sources: Dynamodb, SQS, Kinesis\n        mapping held within lambda function\n        event source mapping: configuration that links event source to lambda function\n        invocation type is always syncronous\n        permission is required in execution role policy\n    b. Push based event sources\n        mapping is maintained within event source\n        mapping\n        invocation type varies on the service\n        lambda function policy",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 468
    },
    {
      "id": "X8Mw4DgeOZPOGA0a5CjuL",
      "type": "text",
      "x": 717.0000000000006,
      "y": -517.6666666666663,
      "width": 328,
      "height": 200,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1255530232,
      "version": 359,
      "versionNonce": 1494516616,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Spot Instance\nReserved Instance\n    Standard reserved instance\n    Convertible reserved instance\nOn Demand Instance\nDedicated instance\nDedicated host instance\n",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 193
    },
    {
      "id": "L854oe3SEv031n-LdkF6-",
      "type": "text",
      "x": 710.8888888888895,
      "y": -313.8888888888886,
      "width": 253,
      "height": 175,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1595309560,
      "version": 324,
      "versionNonce": 1126635144,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "AutoScaling\n    Auto scaling group\n        Minimum capacity\n        Maximum capacity\n        Desired capacity\n    Auto scaling policy\n    Auto scaling plan",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 168
    },
    {
      "id": "Iwaqp2ffunqV4Q7MYmuC9",
      "type": "text",
      "x": 677.1111111111114,
      "y": 647.0000000000005,
      "width": 745,
      "height": 350,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 880001672,
      "version": 538,
      "versionNonce": 102877432,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Elastic load balancer\n    Network load balancer\n        Operates at connection level(layer 4 of OSI model)\n        Routes traffic to targets within VPC\n    Application load balancer\n        operates at request level\n    Classic load balancer\n        operates at both connection and request level\n    Gateway load balancer\n    Cross-Zone Load Balancing\n        allows every load balancer node to distribute requests across all \n        availability zones, although for the Network Load Balancer \n        there are data transfer charges when this feature is enabled.\n",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 343
    },
    {
      "id": "9FVcjFaW25t1J8cWolDRv",
      "type": "text",
      "x": 701.7777777777784,
      "y": -95.77777777777743,
      "width": 562,
      "height": 175,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 2009835256,
      "version": 184,
      "versionNonce": 34801032,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Amazon Neptune\n    Used in Fraud Detection, Recommendation engine\n    Database cluster volume\n    Instances\n    Storage\n    Neptune Storage Auto Repair\n    Cluster endpoint, Reader endpoint, Instance Endpoint",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 168
    },
    {
      "id": "iJS69VFWIwkTFNBdgmEko",
      "type": "text",
      "x": 687.0000000000006,
      "y": 114.77777777777806,
      "width": 420,
      "height": 300,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1049646728,
      "version": 151,
      "versionNonce": 719652488,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Redshift\n    Cluster\n    Redshift engine\n    Leader node\n    Compute Node\n        Node slice\n            types: \n            a. RA3-high performance nodes\n            b. Dense-legacy node types\n    Massively Parallel processing(MPP)\n    Columnar Data storage\n    Result caching",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 293
    },
    {
      "id": "teP9Agec5xhGhJNy0S5RK",
      "type": "text",
      "x": 684.444444444445,
      "y": 441.6111111111114,
      "width": 1194,
      "height": 175,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1649619080,
      "version": 115,
      "versionNonce": 61190536,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "DynamoDB:\n    A Global Secondary Index is an index with a partition and sort key that can be different from those in the table. \n    It is considered \"global\" because queries on the index can span all of the data in a table, across all partitions.\n    commands for searching data on the table\n    a. A scan operation examines every item on the table and returns all the data attributes for each one of them. \n    When you initially navigate to the Items tab for a table, a scan is performed by default. \n    b. query operation",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 168
    },
    {
      "id": "infCw6_w40OIuiq4UznJ9",
      "type": "text",
      "x": 676.6666666666673,
      "y": 1001.6111111111115,
      "width": 1128,
      "height": 700,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 235290760,
      "version": 455,
      "versionNonce": 697698184,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Networking: \nVPC: Virtual Private cloud: isolated region in AWS infrastructure\nCIDR block: Classless Inter-domain routing: Range of IP address, /16 to /28\nSubnets\n    private \n    public\nInternet gateway: attached to VPC\nRoute table: route table in public subnet has route(0.0.0.0/0 IGW) in route table pointing to internet gateway, \n    and is therefore able to access internet\nVPC Security and Control\nNetwork Access Control Lists (NACLs)\nSecurity Groups\nNAT Gateway\nBastion Hosts\nVPC Connectivity\nVPN & Direct Connect\nVPC Peering\nTransit Gateway\nBasic Networking Concepts\nElastic IP Addresses (EIPs)\nElastic Network Interfaces (ENIs)\nEC2 Enhanced Networking with the Elastic Network Adaptor (ENA)\nVPC Endpoints\nAWS Global Accelerator\nDNS & Content Delivery on AWS\nAmazon Route 53\nAmazon CloudFront\n",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 693
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  }
}