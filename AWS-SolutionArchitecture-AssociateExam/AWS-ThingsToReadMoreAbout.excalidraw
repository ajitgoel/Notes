{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 1824,
      "versionNonce": 1348373705,
      "isDeleted": false,
      "id": "5sE8kiHXkPCucb1cA4sZC",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 724.1428571428573,
      "y": -2456.194444444445,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1034,
      "height": 475,
      "seed": 484516344,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Lambda\n    Throttle-Reserve concurrency limit\n    IAM role: so lambda can assume and execute code of function\n    Function policy: required to specify which AWS resources are allowed to invoke your function\n    Log streams: helps to identify & troubleshoot issues with your lambda function\n    Downstream resources: resources required during execution of lambda function\n    Role execution policy: what resources the function role has access to when the function is being run\n    Function policy: defines which AWS resources are allowed to invoke your function\n\n    a. Poll based event sources: Dynamodb, SQS, Kinesis\n        mapping held within lambda function\n        event source mapping: configuration that links event source to lambda function\n        invocation type is always syncronous\n        permission is required in execution role policy\n    b. Push based event sources\n        mapping is maintained within event source\n        mapping\n        invocation type varies on the service\n        lambda function policy",
      "baseline": 468,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 364,
      "versionNonce": 1787469769,
      "isDeleted": false,
      "id": "X8Mw4DgeOZPOGA0a5CjuL",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 717.0000000000006,
      "y": -517.6666666666663,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 328,
      "height": 200,
      "seed": 1255530232,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Spot Instance\nReserved Instance\n    Standard reserved instance\n    Convertible reserved instance\nOn Demand Instance\nDedicated instance\nDedicated host instance\n",
      "baseline": 193,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 329,
      "versionNonce": 1355210055,
      "isDeleted": false,
      "id": "L854oe3SEv031n-LdkF6-",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 710.8888888888895,
      "y": -313.8888888888886,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 253,
      "height": 175,
      "seed": 1595309560,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "AutoScaling\n    Auto scaling group\n        Minimum capacity\n        Maximum capacity\n        Desired capacity\n    Auto scaling policy\n    Auto scaling plan",
      "baseline": 168,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 189,
      "versionNonce": 697679529,
      "isDeleted": false,
      "id": "9FVcjFaW25t1J8cWolDRv",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 701.7777777777784,
      "y": -95.77777777777743,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 562,
      "height": 175,
      "seed": 2009835256,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Amazon Neptune\n    Used in Fraud Detection, Recommendation engine\n    Database cluster volume\n    Instances\n    Storage\n    Neptune Storage Auto Repair\n    Cluster endpoint, Reader endpoint, Instance Endpoint",
      "baseline": 168,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 156,
      "versionNonce": 849976423,
      "isDeleted": false,
      "id": "iJS69VFWIwkTFNBdgmEko",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 687.0000000000006,
      "y": 114.77777777777806,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 420,
      "height": 300,
      "seed": 1049646728,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Redshift\n    Cluster\n    Redshift engine\n    Leader node\n    Compute Node\n        Node slice\n            types: \n            a. RA3-high performance nodes\n            b. Dense-legacy node types\n    Massively Parallel processing(MPP)\n    Columnar Data storage\n    Result caching",
      "baseline": 293,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 120,
      "versionNonce": 1536819593,
      "isDeleted": false,
      "id": "teP9Agec5xhGhJNy0S5RK",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 684.444444444445,
      "y": 441.6111111111114,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1194,
      "height": 175,
      "seed": 1649619080,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "DynamoDB:\n    A Global Secondary Index is an index with a partition and sort key that can be different from those in the table. \n    It is considered \"global\" because queries on the index can span all of the data in a table, across all partitions.\n    commands for searching data on the table\n    a. A scan operation examines every item on the table and returns all the data attributes for each one of them. \n    When you initially navigate to the Items tab for a table, a scan is performed by default. \n    b. query operation",
      "baseline": 168,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 1073,
      "versionNonce": 1780905240,
      "isDeleted": false,
      "id": "infCw6_w40OIuiq4UznJ9",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 665.4761904761913,
      "y": 639.3888888888891,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1292,
      "height": 1475,
      "seed": 235290760,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Networking: \nVPC: Virtual Private Cloud (VPC) lets you provision a logically isolated section of the AWS Cloud \nwhere you can launch AWS resources in a virtual network that you define.\nCIDR block: Classless Inter-domain routing: Range of IP address, /16 to /28\nSubnets: range of IP addresses in your VPC\n    private: configure resources for a back-end tier, such as database servers that should not be accessible from the internet. \n    However, you may eventually want these back-end database servers to access the internet for OS updates \n    or to be accessible by administrators via a bastion host.\n    public: If subnet is associated with a route table that has a route to an internet gateway\nInternet gateway: attached to VPC\nRoute table: route table in public subnet has route(0.0.0.0/0 IGW) in route table pointing to internet gateway, \n    and is therefore able to access internet\nDHCP options set: enables DNS for instances that need to communicate over the VPC's Internet gateway\nRoute Table: contains a set of rules, called routes, that are used to determine where network traffic is directed\nNetwork ACL: list of rules to determine whether traffic is allowed in or out of any subnet associated with the network ACL\nAvailability Zones: distinct locations that are engineered to be isolated from failures in other Availability Zones.\ninternet gateway: VPC component that allows communication between instances in your VPC and the Internet. \n    serves two purposes: \n    a. to provide a target in your VPC route tables for internet-routable traffic and \n    b. to perform network address translation (NAT) for instances that have been assigned public IP addresses\nElastic IP address (EIP): static and public IP address that you can associate with an EC2 instance. \nEIPs have the benefit of not changing when you stop and start an EC2 instance, \nwhereas the default public IP that comes with an EC2 instance may change. \nNetwork access control list (NACL): acts as a firewall for controlling traffic in and out of a subnet. \nNetwork address translation(NAT) device enables instances in the private subnet to initiate outbound traffic to the Internet.\n    The instances in the private subnet can access the Internet via the NAT Gateway in the public subnet. \nbastion host: a host that sits inside your public subnet for the purposes of SSH (and/or RDP) access.\n\n\nVPC Security and Control\nNetwork Access Control Lists (NACLs)\nSecurity Groups\nNAT Gateway\nBastion Hosts\nVPC Connectivity\nVPN & Direct Connect\nVPC Peering\nTransit Gateway\nBasic Networking Concepts\nElastic IP Addresses (EIPs)\nElastic Network Interfaces (ENIs)\nEC2 Enhanced Networking with the Elastic Network Adaptor (ENA)\nVPC Endpoints\nAWS Global Accelerator\nDNS & Content Delivery on AWS\nAmazon Route 53\nAmazon CloudFront\n\nVPC\n    lives in a region\n    has multiple subnets\n    has Internet gateway which allows access to internet\n    can span multiple Az's\n\nSubnet \n    has a route table which controls traffic out of subnet    \n    has NAT gateway which allows private subnet to access Internet\n    access is controlled through Network access control list(NACL). NACL is stateless. \n",
      "baseline": 1468,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 339,
      "versionNonce": 1412710471,
      "isDeleted": false,
      "id": "4bRu9RbAdEQq1XX-4fD-P",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 778.8174603174612,
      "y": -1931.8174167209215,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 612,
      "height": 75,
      "seed": 1113795943,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Enable Lambda to access resources in VPc by \nprovide additional VPC specific config info eg: VPC subnet Id's\nSecurity group Id's",
      "baseline": 68,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 395,
      "versionNonce": 1751387049,
      "isDeleted": false,
      "id": "NyFmdpLxEssY1L5U4DzJ2",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 754.995317282026,
      "y": -1907.0267373587712,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 659.3056333865443,
      "height": 6.342226714747312,
      "seed": 2132006119,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          659.3056333865443,
          -6.342226714747312
        ]
      ]
    },
    {
      "type": "arrow",
      "version": 581,
      "versionNonce": 1215471463,
      "isDeleted": false,
      "id": "GbNuOGE5myWP1sXuYoPb8",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1426.5054157122777,
      "y": -1930.9005334843298,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 477.5894233339036,
      "height": 0.7436069793106981,
      "seed": 644435433,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          477.5894233339036,
          0.7436069793106981
        ]
      ]
    },
    {
      "type": "text",
      "version": 506,
      "versionNonce": 622243465,
      "isDeleted": false,
      "id": "enuxY5dfzb5nVyUMyptu-",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1453.1031746031754,
      "y": -1957.531702435207,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 341,
      "height": 75,
      "seed": 1147319721,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [
        "GbNuOGE5myWP1sXuYoPb8"
      ],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Lambda uses this to set up \nENI to enable function to connect\nto other resources in private VPC",
      "baseline": 68,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 238,
      "versionNonce": 2050957063,
      "isDeleted": false,
      "id": "k1QarxLKeIBrwMy23jrK2",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 770.2460317460324,
      "y": -1821.8174167209215,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 952,
      "height": 75,
      "seed": 523831239,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [
        "inLAsYhQDFwmR7qQavwU8"
      ],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "make sure VPC has sufficient ENI capacity to support scale requirements of Lambda function. \nspecify at least one subnet in each AZ in your Lambda function configuration\n(Lambda function can run in another AZ if one goes down or runs out of IP addresses.)",
      "baseline": 68,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 873,
      "versionNonce": 1304076809,
      "isDeleted": false,
      "id": "inLAsYhQDFwmR7qQavwU8",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 767.1656057933662,
      "y": -1794.6177916391482,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1129.4848789899447,
      "height": 5.4307059802475806,
      "seed": 1814603433,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": {
        "elementId": "k1QarxLKeIBrwMy23jrK2",
        "focus": -0.3167699427537277,
        "gap": 3.0804259526660758
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          1129.4848789899447,
          -5.4307059802475806
        ]
      ]
    },
    {
      "type": "text",
      "version": 863,
      "versionNonce": 255043111,
      "isDeleted": false,
      "id": "vavKYyJFK12v5moP_aqg1",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 697.1554467751545,
      "y": -1714.603087410095,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 977,
      "height": 200,
      "seed": 1869536103,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [
        "_eXgF1byrgGcNe27QOSNy",
        "duGbYWKrO7DwN_AtmpD00"
      ],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "CloudFront:\n\nServe content that is stored in S3 but not publicly accessible from S3 directly\na. When creating or updating distribution in Cloudfront, you can add OAI=> \nthis update S3 bucket policy to give OAI(Origin Access Identity) permission to access your bucket\nb. you can manually change bucket policy\nc. Change Network Access control list which control permissions on individual objects in bucket. \n",
      "baseline": 193,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "arrow",
      "version": 539,
      "versionNonce": 604731625,
      "isDeleted": false,
      "id": "duGbYWKrO7DwN_AtmpD00",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 697.3888888888893,
      "y": -1635.6745159815237,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1.895455656041122,
      "height": 0.011069062596789081,
      "seed": 610986727,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": {
        "elementId": "vavKYyJFK12v5moP_aqg1",
        "focus": -0.2325927657144703,
        "gap": 1.6620135423062834
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -1.895455656041122,
          0.011069062596789081
        ]
      ]
    },
    {
      "type": "arrow",
      "version": 344,
      "versionNonce": 545272807,
      "isDeleted": false,
      "id": "6aWRyW0d8Vjb38atVf7dC",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 647.3888888888893,
      "y": -1635.6745159815237,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1107.1428571428573,
      "height": 11.428571428571331,
      "seed": 608985319,
      "groupIds": [],
      "strokeSharpness": "round",
      "boundElementIds": [],
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          1107.1428571428573,
          -11.428571428571331
        ]
      ]
    },
    {
      "type": "text",
      "version": 520,
      "versionNonce": 2035377481,
      "isDeleted": false,
      "id": "TQLC9LQkJ2Lc8yYwYVGEx",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 692.714285714286,
      "y": -1123.5079365079364,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 883,
      "height": 275,
      "seed": 485525191,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "AutoScaling group of EC2 instances behind load balancer=> \nallow application to allow multiple domains to serve SSL traffic over same IP address=>\nGenerate SSL certificate with AWS certificate manager=> \nCreate cloudfront web distribution=> \nAssociate certificate with cloudfront web distribution=>\nEnable support for Server name indication(SNI)=> \n    SNI offers same security as the Dedicated IP Custom SSL feature. \n    Does not work on some older browsers\n    SNI Custom SSL relies on SNI extension of the Transport Layer Security protocol, \n    which allows multiple domains to serve SSL traffic over same IP address \n    by including the hostname which the viewers are trying to connect to.",
      "baseline": 268,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 240,
      "versionNonce": 387218887,
      "isDeleted": false,
      "id": "h7qRCjKJ_LAu2tRGzOQCx",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 682.714285714286,
      "y": -1503.5079365079364,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1016,
      "height": 350,
      "seed": 285791625,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "SQS:\nShort Polling:\n    Used for scenarios where high throughput is required\n    short polling queries only a subset of the servers (based on a weighted random distribution) \n    to determine whether any messages are available for inclusion in the response. \n    If ReceiveMessageWaitTimeSeconds is zero it means Short polling is being used.\nLong Polling\n    Used for scenarios where cost needs to be reduced\n     Long polling eliminates false empty responses by querying all of the\n    servers. \n    Long polling returns messages as soon any message becomes available.\n    If ReceiveMessageWaitTimeSeconds is greater than zero, then it is Long polling\n    Long polling reduces number of empty responses by allowing Amazon SQS to wait until a message is\n    available in the queue before sending a response.",
      "baseline": 343,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 87,
      "versionNonce": 1153748449,
      "isDeleted": false,
      "id": "pkszo-8LY6dvMc2jkS7jU",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 662.087551661992,
      "y": 2111.86757791951,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1451,
      "height": 300,
      "seed": 619509025,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 20,
      "fontFamily": 1,
      "text": "S3:\nIn S3 you can set permissions on your S3 resources using Bucket Policies and User Policies.  \nBucket policies are applied directly to a bucket within S3 itself, whereas user policies are set within IAM.\nARNs (Amazon Resource Names) adhere to the following pattern:\narn:Paritition:Service:Region:Account-ID:Resource\nPartition – This relates to the partition that the resource is found in. For standard AWS regions, this section would be ‘aws.’\nService – This reflects the specific AWS service, for example ‘s3.’\nRegion – This is the region where the resource is located. Some services do not need a region specified, so this can sometimes be left blank.\nAccount-ID – This is your AWS Account ID (without hyphens). Again, some services do not need this information, and so it can be left blank.\nResource – The value of this field depends on the AWS service you are using.\nFor example, if using the Action: “Action”:”s3:*”, then use the bucket name that you want the permission to apply to arn:aws:s3:::calabs-bucket/*.\n",
      "baseline": 293,
      "textAlign": "left",
      "verticalAlign": "top"
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  }
}